# -*- coding: utf-8 -*-
"""Neurolens.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rc6f9GWGhOz5_t4imb1jQbonvpoHIIwU
"""

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
import joblib

# Step 1: Load the Excel Files
normal_file = "/content/drive/MyDrive/medtech hackathon/normal blinking(Sheet1).csv" # Update with actual file path
absent_file = "/content/drive/MyDrive/medtech hackathon/stare then blink fast(Sheet1).csv"  # Update with actual file path

column_names = ['time', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6']

df_normal = pd.read_csv(normal_file, header=None, names=column_names)  # header=None and names=column_names
df_seizure = pd.read_csv(absent_file, header=None, names=column_names) # header=None and names=column_names



# Step 2: Add Labels
df_normal["label"] = 0  # Normal activity
df_seizure["label"] = 1  # Absence seizure


# Step 3: Merge All Data
df = pd.concat([df_normal, df_seizure], ignore_index=True)
df.to_csv('data.csv', index=False)


# Step 4: Select Features and Labels
X = df[['d1', 'd3', 'd5']]  # Use d1, d3, and d5 for classification
y = df['label']  # 0 = Normal, 1 = Absence Seizure

# Step 5: Split Data into Training and Testing Sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 6: Train a Machine Learning Classifier
clf = RandomForestClassifier(n_estimators=100, random_state=42)
clf.fit(X_train, y_train)

# Step 7: Evaluate the Model
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Model Accuracy: {accuracy:.4f}")
print("Classification Report:\n", report)

# Step 8: Save the Trained Model
joblib.dump(clf, "absence_seizure_classifier.pkl")
print("Model saved as 'absence_seizure_classifier.pkl'")

# Optional: Load and Use the Model Later
# loaded_model = joblib.load("absence_seizure_classifier.pkl")
# new_predictions = loaded_model.predict(X_test)

import joblib

# Save trained model
joblib.dump(clf, "absence_seizure_classifier.pkl")